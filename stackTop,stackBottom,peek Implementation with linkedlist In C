// Online C compiler to run C program online
#include <stdio.h>
#include <stdlib.h>

struct Node{
    int data;
    struct Node* next;
    
};
int isFull(struct Node * top){
    struct Node *p=(struct Node*)malloc(sizeof(struct Node));
    if (p==NULL){
        return 1;
    }
    else{
        return 0;
        
    }
}
// isEmpty function
int isEmpty(struct Node * top){
    if (top==NULL){
        return 1;
    }
    else{
        return 0;
        
    }
}

void linkedListTraversal(struct Node* ptr){
    while (ptr!=NULL){
        printf("%d\n",ptr->data);
        ptr=ptr->next;
    }
}

struct Node* push(struct Node* top,int x){
    if (isFull(top)){
        printf("Stack Overflow");
    }
    else{
        struct Node*n=(struct Node*)malloc(sizeof(struct Node));
        //adding as a first elememt
        n->data=x;
        n->next=top;
        top=n;
        return top;
        
        
    }
    
}
int  pop(struct Node *top){
    if (isEmpty(top)){
        printf("Stack Underflow! Element can not be removed");
    }
    else{
       struct Node *n=top;
       top=top->next;
       int x=n->data;
       free(n);
       return x;
    }
}
int peek(struct Node*top,int pos){
    struct Node *ptr=top;
    for (int i=0;i<pos-1 && ptr!=NULL;i++){
        ptr=ptr->next;
    }
    if (ptr!=NULL){
        return ptr->data;
    }
    else{
        return -1;
    }
        
    
}

// creating a stack top function of the stack

int stackTop(struct Node *top){
    return top->data;
    
}
int stackBottom(struct Node *top){
    struct Node *ptr=top;
    while (ptr->next!=NULL){
        ptr=ptr->next;
        
    }
    return ptr->data;
}



int main() {
    struct Node*top=NULL;
   
    // Write C code here
    // printf("%d\n",isFull(top));
    // printf("%d\n",isEmpty(top));
    top=push(top,78);
    top=push(top,80);
    top=push(top,98);It",element);
    printf("Please find the peek element at %d \n",peek(top,2));
    //linkedListTraversal(top);
    

}
